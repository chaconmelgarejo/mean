 - hosts: mongodb
   become: yes
   handlers:
     - name: restart mongod
       service: name=mongod state=restarted
   vars_files:
     - credentials.yml
     - app_settings.yml
   tasks:
     - name: Install the EPEL repository
       yum:
         name: epel-release
         state: present

     - name: Install pip 
       yum: name=python-pip state=present
       
     - name: Install pymongo
       pip: name=pymongo state=present
       
     - name: Add the Mongo repository
       yum_repository:
         name: mongodb-org-3.4
         description: MongoDB repository
         baseurl: https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64
         enabled: yes
         gpgkey: https://www.mongodb.org/static/pgp/server-3.4.asc
         gpgcheck: yes

     - name: Install MongoDB package
       yum:
         name: mongodb-org
         state: present

     - name: Start and enable the service
       service:
        name: mongod
        state: started
        enabled: yes 

     - name: Does .rootCreated exist?
       stat: path=/root/.rootCreated
       register: rootCreated
       changed_when: false

     - name: Create the admin account
       mongodb_user:
         database: admin
         name: root
         password: "{{ admin_password }}"
         roles: root
         state: present
       when: rootCreated.stat.exists == false

     - name: create .rootCreated file
       copy:
         content: ""
         dest: "/root/.rootCreated"
         force: no

     - name: Upload the configuration file
       copy:
         src: files/mongod.conf
         dest: /etc/mongod.conf
       notify: restart mongod 

     - name: Is the application user created
       shell: mongo admin -u root -p{{ admin_password }} --eval "db.system.users.find()"
       register: userCreated
       changed_when: false

     - name: Create the user, password and the database for the application
       mongodb_user: 
         database: "{{ db_name }}"
         login_user: root
         login_password: "{{ admin_password }}"
         name: "{{ app_user }}"
         password: "{{ app_password }}"
         roles: dbOwner
         state: present
       when: "app_user not in userCreated.stdout" 

     - name: Is the seed record created?
       shell: mongo {{ db_name }} -u {{ app_user }} -p{{ app_password }} --eval "db.users.find()"
       register: seedCreated
       changed_when: false

     - name: Add the seed record
       shell: > 
         mongo {{ db_name }} -u {{ app_user }} -p{{ app_password }} --eval 'db.users.insert(
           {
             "name": "Vedat YILMAZ",
             "email": "vedyilmaz@gmail.com",
             "password": "$2y$10$RoqdQYd/cFU5vxD7Zdjke.x2eYfpYwK9yAshhfrhVJhNXEo9tK6xK",
             "username": "vedyilmaz",
             "permission": "admin",
             "active": true,
           }
         )'
       when: "'vedyilmaz' not in seedCreated.stdout"
       
